buildscript {
    repositories {
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "Scala CI dependencies"
            url = "https://repo1.maven.org/maven2/"
        }
        maven {
            name = "jitpack"
            url = "https://jitpack.io"
        }
    }
    dependencies {
        classpath 'com.github.GTNewHorizons:ForgeGradle:1.2.4'
    }
}

apply plugin: 'forge'

compileJava.options.encoding = 'UTF-8'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

version = "1.3.30-GTNH"
group= "alexiil.mods.load" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "BetterLoadingScreen"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
    replace "@COMMIT_HASH@", System.getenv("DRONE_COMMIT")?: "manual build"
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.6.0'
    compile group: 'org.json', name: 'json', version: '20190722'
    compile group: 'com.squareup.okio', name: 'okio', version: '2.6.0'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar
{
    manifest
    {
        attributes 'FMLCorePluginContainsFMLMod': 'true'
        attributes 'FMLCorePlugin': 'alexiil.mods.load.coremod.LoadingScreenLoadPlugin'
    }
}